-- Criação da tabela Cliente
CREATE TABLE Cliente (
    id INT PRIMARY KEY,
    nome VARCHAR(255),
    tipo ENUM('PF', 'PJ')
);

-- Criação da tabela Pedido
CREATE TABLE Pedido (
    id INT PRIMARY KEY,
    cliente_id INT,
    data_pedido DATE,
    FOREIGN KEY (cliente_id) REFERENCES Cliente(id)
);

-- Criação da tabela Produto
CREATE TABLE Produto (
    id INT PRIMARY KEY,
    nome VARCHAR(255),
    preco DECIMAL(10, 2)
);

-- Criação da tabela Fornecedor
CREATE TABLE Fornecedor (
    id INT PRIMARY KEY,
    nome VARCHAR(255)
);

-- Criação da tabela Estoque
CREATE TABLE Estoque (
    produto_id INT,
    fornecedor_id INT,
    quantidade INT,
    FOREIGN KEY (produto_id) REFERENCES Produto(id),
    FOREIGN KEY (fornecedor_id) REFERENCES Fornecedor(id)
);

-- Criação da tabela FormaPagamento
CREATE TABLE FormaPagamento (
    id INT PRIMARY KEY,
    descricao VARCHAR(255)
);

-- Criação da tabela PedidoFormaPagamento
CREATE TABLE PedidoFormaPagamento (
    pedido_id INT,
    forma_pagamento_id INT,
    FOREIGN KEY (pedido_id) REFERENCES Pedido(id),
    FOREIGN KEY (forma_pagamento_id) REFERENCES FormaPagamento(id)
);

-- Criação da tabela Entrega
CREATE TABLE Entrega (
    id INT PRIMARY KEY,
    pedido_id INT,
    status VARCHAR(255),
    codigo_rastreio VARCHAR(255),
    FOREIGN KEY (pedido_id) REFERENCES Pedido(id)
);

-- Consultas SQL:

-- 1. Quantos pedidos foram feitos por cada cliente?
SELECT Cliente.nome, COUNT(Pedido.id) AS total_pedidos
FROM Cliente
LEFT JOIN Pedido ON Cliente.id = Pedido.cliente_id
GROUP BY Cliente.nome;

-- 2. Algum vendedor também é fornecedor?
SELECT DISTINCT Fornecedor.nome
FROM Fornecedor
JOIN Estoque ON Fornecedor.id = Estoque.fornecedor_id
JOIN Produto ON Estoque.produto_id = Produto.id
JOIN Pedido ON Produto.id = Pedido.id;

-- 3. Relação de produtos fornecedores e estoques:
SELECT Produto.nome, Fornecedor.nome AS fornecedor, Estoque.quantidade
FROM Produto
JOIN Estoque ON Produto.id = Estoque.produto_id
JOIN Fornecedor ON Estoque.fornecedor_id = Fornecedor.id;

-- 4. Relação de nomes dos fornecedores e nomes dos produtos:
SELECT Fornecedor.nome AS fornecedor, GROUP_CONCAT(Produto.nome) AS produtos
FROM Fornecedor
JOIN Estoque ON Fornecedor.id = Estoque.fornecedor_id
JOIN Produto ON Estoque.produto_id = Produto.id
GROUP BY Fornecedor.nome;

